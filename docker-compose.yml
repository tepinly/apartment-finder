version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: my_postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U myuser -d mydb']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      args:
        DATABASE_URL: postgresql://myuser:mypassword@postgres:5432/mydb
    container_name: backend_service
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://myuser:mypassword@postgres:5432/mydb
      PORT: 4000
    ports:
      - '4000:4000'

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: http://localhost:4000/v1
    container_name: frontend_service
    restart: always
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:4000/v1
    ports:
      - '3000:3000'

volumes:
  postgres_data:
